/* Audio Library for Teensy 3.X
 * Copyright (c) 2018, Paul Stoffregen, paul@pjrc.com
 *
 * Development of this audio library was funded by PJRC.COM, LLC by sales of
 * Teensy and Audio Adaptor boards.  Please support PJRC's efforts to develop
 * open source software by purchasing Teensy or other PJRC products.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice, development funding notice, and this permission
 * notice shall be included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */


#include <Arduino.h>
#include "input_pdm2.h"
#include "utility/dspinst.h"



DMAMEM __attribute__((aligned(32))) static uint32_t pdm_buffer[AUDIO_BLOCK_SAMPLES*4];

audio_block_t * AudioInputPDM2::block_left = NULL;
bool AudioInputPDM2::update_responsibility = false;
DMAChannel AudioInputPDM2::dma(false);


#if defined(__IMXRT1052__) || defined(__IMXRT1062__)

#include "utility/imxrt_hw.h"


void AudioInputPDM2::begin(void)
{
  dma.begin(true); // Allocate the DMA channel first

  CCM_CCGR5 |= CCM_CCGR5_SAI1(CCM_CCGR_ON);

//PLL:
  int fs = AUDIO_SAMPLE_RATE_EXACT;
  // PLL between 27*24 = 648MHz und 54*24=1296MHz
  int n1 = 4; //SAI prescaler 4 => (n1*n2) = multiple of 4
  int n2 = 1 + (24000000 * 27) / (fs * 256 * n1);

  double C = ((double)fs * 256 * n1 * n2) / 24000000;
  int c0 = C;
  int c2 = 10000;
  int c1 = C * c2 - (c0 * c2);
  set_audioClock(c0, c1, c2);

  // clear SAI1_CLK register locations
  CCM_CSCMR1 = (CCM_CSCMR1 & ~(CCM_CSCMR1_SAI1_CLK_SEL_MASK))
    | CCM_CSCMR1_SAI1_CLK_SEL(2); // &0x03 // (0,1,2): PLL3PFD0, PLL5, PLL4
  CCM_CS1CDR = (CCM_CS1CDR & ~(CCM_CS1CDR_SAI1_CLK_PRED_MASK | CCM_CS1CDR_SAI1_CLK_PODF_MASK))
    | CCM_CS1CDR_SAI1_CLK_PRED(n1-1) // &0x07
    | CCM_CS1CDR_SAI1_CLK_PODF(n2-1); // &0x3f

  // Select MCLK
  IOMUXC_GPR_GPR1 = (IOMUXC_GPR_GPR1 & ~(IOMUXC_GPR_GPR1_SAI1_MCLK1_SEL_MASK))
    | (IOMUXC_GPR_GPR1_SAI1_MCLK_DIR | IOMUXC_GPR_GPR1_SAI1_MCLK1_SEL(0));
  /*
  //// CORE_PIN33_CONFIG = 3;  //1:MCLK
  CORE_PIN4_CONFIG = 3;  //1:RX_BCLK
  //// CORE_PIN3_CONFIG = 3;  //1:RX_SYNC  // LRCLK
  */
  //// CORE_PIN23_CONFIG = 3;  //1:MCLK
  CORE_PIN21_CONFIG = 3;  //1:RX_BCLK
  //// CORE_PIN20_CONFIG = 3;  //1:RX_SYNC  // LRCLK
  
  int rsync = 0;
  int tsync = 1;

  I2S1_TMR = 0;
  //I2S1_TCSR = (1<<25); //Reset
  I2S1_TCR1 = I2S_TCR1_RFW(1);
  I2S1_TCR2 = I2S_TCR2_SYNC(tsync) | I2S_TCR2_BCP | (I2S_TCR2_BCD | I2S_TCR2_DIV((1)) | I2S_TCR2_MSEL(1)); // sync=0; tx is async;
  I2S1_TCR3 = I2S_TCR3_TCE;
  I2S1_TCR4 = I2S_TCR4_FRSZ((2-1)) | I2S_TCR4_SYWD((32-1)) | I2S_TCR4_MF | I2S_TCR4_FSD | I2S_TCR4_FSE | I2S_TCR4_FSP;
  I2S1_TCR5 = I2S_TCR5_WNW((32-1)) | I2S_TCR5_W0W((32-1)) | I2S_TCR5_FBT((32-1));

  I2S1_RMR = 0;
  //I2S1_RCSR = (1<<25); //Reset
  I2S1_RCR1 = I2S_RCR1_RFW(2);
  I2S1_RCR2 = I2S_RCR2_SYNC(rsync) | I2S_RCR2_BCP | (I2S_RCR2_BCD | I2S_RCR2_DIV((1)) | I2S_RCR2_MSEL(1));  // sync=0; rx is async;
  I2S1_RCR3 = I2S_RCR3_RCE;
  I2S1_RCR4 = I2S_RCR4_FRSZ((2-1)) | I2S_RCR4_SYWD((32-1)) | I2S_RCR4_MF /* | I2S_RCR4_FSE */ | I2S_RCR4_FSP | I2S_RCR4_FSD;
  I2S1_RCR5 = I2S_RCR5_WNW((32-1)) | I2S_RCR5_W0W((32-1)) | I2S_RCR5_FBT((32-1));

  /*
  CORE_PIN5_CONFIG  = 3;  //1:RX_DATA0
  */
  CORE_PIN8_CONFIG  = 3;  //1:RX_DATA0

  IOMUXC_SAI1_RX_DATA0_SELECT_INPUT = 2;
  
  dma.TCD->SADDR = &I2S1_RDR0;
  dma.TCD->SOFF = 0;
  dma.TCD->ATTR = DMA_TCD_ATTR_SSIZE(2) | DMA_TCD_ATTR_DSIZE(2);
  dma.TCD->NBYTES_MLNO = 4;
  dma.TCD->SLAST = 0;
  dma.TCD->DADDR = pdm_buffer;
  dma.TCD->DOFF = 4;
  dma.TCD->CITER_ELINKNO = sizeof(pdm_buffer) / 4;
  dma.TCD->DLASTSGA = -sizeof(pdm_buffer);
  dma.TCD->BITER_ELINKNO = sizeof(pdm_buffer) / 4;
  dma.TCD->CSR = DMA_TCD_CSR_INTHALF | DMA_TCD_CSR_INTMAJOR;

  dma.triggerAtHardwareEvent(DMAMUX_SOURCE_SAI1_RX);
  update_responsibility = update_setup();
  dma.enable();

  I2S1_RCSR |= I2S_RCSR_RE | I2S_RCSR_BCE | I2S_RCSR_FRDE | I2S_RCSR_FR;
  I2S1_TCSR |= I2S_TCSR_TE | I2S_TCSR_BCE; // TX clock enable, because sync'd to TX

  dma.attachInterrupt(isr);
}

#else  // not T4:

// MCLK needs to be 48e6 / 1088 * 256 = 11.29411765 MHz -> 44.117647 kHz sample rate
//
#if F_CPU == 96000000 || F_CPU == 48000000 || F_CPU == 24000000
  // PLL is at 96 MHz in these modes
  #define MCLK_MULT 2
  #define MCLK_DIV  17
#elif F_CPU == 72000000
  #define MCLK_MULT 8
  #define MCLK_DIV  51
#elif F_CPU == 120000000
  #define MCLK_MULT 8
  #define MCLK_DIV  85
#elif F_CPU == 144000000
  #define MCLK_MULT 4
  #define MCLK_DIV  51
#elif F_CPU == 168000000
  #define MCLK_MULT 8
  #define MCLK_DIV  119
#elif F_CPU == 180000000
  #define MCLK_MULT 16
  #define MCLK_DIV  255
  #define MCLK_SRC  0
#elif F_CPU == 192000000
  #define MCLK_MULT 1
  #define MCLK_DIV  17
#elif F_CPU == 216000000
  #define MCLK_MULT 12
  #define MCLK_DIV  17
  #define MCLK_SRC  1
#elif F_CPU == 240000000
  #define MCLK_MULT 2
  #define MCLK_DIV  85
  #define MCLK_SRC  0
#elif F_CPU == 256000000
  #define MCLK_MULT 12
  #define MCLK_DIV  17
  #define MCLK_SRC  1
#elif F_CPU == 16000000
  #define MCLK_MULT 12
  #define MCLK_DIV  17
#else
  #error "This CPU Clock Speed is not supported by the Audio library";
#endif

#ifndef MCLK_SRC
#if F_CPU >= 20000000
  #define MCLK_SRC  3  // the PLL
#else
  #define MCLK_SRC  0  // system clock
#endif
#endif


void AudioInputPDM2::begin(void)
{
  dma.begin(true); // Allocate the DMA channel first

  SIM_SCGC6 |= SIM_SCGC6_I2S;
  SIM_SCGC7 |= SIM_SCGC7_DMA;
  SIM_SCGC6 |= SIM_SCGC6_DMAMUX;

  // enable MCLK output
  I2S0_MCR = I2S_MCR_MICS(MCLK_SRC) | I2S_MCR_MOE;
  while (I2S0_MCR & I2S_MCR_DUF)
  {}
  I2S0_MDR = I2S_MDR_FRACT((MCLK_MULT-1)) | I2S_MDR_DIVIDE((MCLK_DIV-1));

  // configure transmitter
  I2S0_TMR = 0;
  I2S0_TCR1 = I2S_TCR1_TFW(1);  // watermark at half fifo size
  I2S0_TCR2 = I2S_TCR2_SYNC(0) | I2S_TCR2_BCP | I2S_TCR2_MSEL(1) | I2S_TCR2_BCD | I2S_TCR2_DIV(1);
  I2S0_TCR3 = I2S_TCR3_TCE;
  I2S0_TCR4 = I2S_TCR4_FRSZ(1) | I2S_TCR4_SYWD(31) | I2S_TCR4_MF | I2S_TCR4_FSE | I2S_TCR4_FSP | I2S_TCR4_FSD;
  I2S0_TCR5 = I2S_TCR5_WNW(31) | I2S_TCR5_W0W(31) | I2S_TCR5_FBT(31);

  // configure receiver (sync'd to transmitter clocks)
  I2S0_RMR = 0;
  I2S0_RCR1 = I2S_RCR1_RFW(2);
  I2S0_RCR2 = I2S_RCR2_SYNC(1) | I2S_TCR2_BCP | I2S_RCR2_MSEL(1) | I2S_RCR2_BCD | I2S_RCR2_DIV(1);
  I2S0_RCR3 = I2S_RCR3_RCE;
  I2S0_RCR4 = I2S_RCR4_FRSZ(1) | I2S_RCR4_SYWD(31) | I2S_RCR4_MF /* | I2S_RCR4_FSE */ | I2S_RCR4_FSP | I2S_RCR4_FSD;
  I2S0_RCR5 = I2S_RCR5_WNW(31) | I2S_RCR5_W0W(31) | I2S_RCR5_FBT(31);

  CORE_PIN9_CONFIG  = PORT_PCR_MUX(6); // pin  9, PTC3, I2S0_TX_BCLK
  CORE_PIN13_CONFIG = PORT_PCR_MUX(4); // pin 13, PTC5, I2S0_RXD0

#if defined(KINETISK)
  dma.TCD->SADDR = &I2S0_RDR0;
  dma.TCD->SOFF = 0;
  dma.TCD->ATTR = DMA_TCD_ATTR_SSIZE(2) | DMA_TCD_ATTR_DSIZE(2);
  dma.TCD->NBYTES_MLNO = 4;
  dma.TCD->SLAST = 0;
  dma.TCD->DADDR = pdm_buffer;
  dma.TCD->DOFF = 4;
  dma.TCD->CITER_ELINKNO = sizeof(pdm_buffer) / 4;
  dma.TCD->DLASTSGA = -sizeof(pdm_buffer);
  dma.TCD->BITER_ELINKNO = sizeof(pdm_buffer) / 4;
  dma.TCD->CSR = DMA_TCD_CSR_INTHALF | DMA_TCD_CSR_INTMAJOR;
#endif
  dma.triggerAtHardwareEvent(DMAMUX_SOURCE_I2S0_RX);
  update_responsibility = update_setup();
  dma.enable();

  I2S0_RCSR |= I2S_RCSR_RE | I2S_RCSR_BCE | I2S_RCSR_FRDE | I2S_RCSR_FR;
  I2S0_TCSR |= I2S_TCSR_TE | I2S_TCSR_BCE; // TX clock enable, because sync'd to TX
  dma.attachInterrupt(isr);
}
#endif
 
////////////////////////////////////////


class FIR_type1
{
public:
  FIR_type1 (int _half_taps, const int16_t * _coeffs, int _shift)
  {
    half_taps = _half_taps ;
    full_taps = 2 * half_taps - 1;
    coeffs = _coeffs ;
    if (_shift > 15)
    {
      shift1 = _shift - 15 ;
      shift2 = 15 ;
    }
    else
    {
      shift1 = 0 ;
      shift2 = _shift ;
    }
    buffer = new int16_t [2 * full_taps] ;
    fptr = & buffer[0] ;
    inptr = & buffer[full_taps] ;
  }

  void insert (int16_t in)
  {
    *inptr++ = in ;
    fptr++ ;

    if (inptr >= & buffer[2*full_taps])
    {
      for (int i = 0 ; i < full_taps ; i++)
      {
	*(--fptr) = *(--inptr) ;
      }
    }
  }

  int16_t eval (void)
  {
    int16_t * ap = fptr ;
    int16_t * bp = inptr-1 ;
    int32_t out = 0 ;
    
    for (int i = 0 ; i < half_taps ; i++)
    {
      int32_t sum = *ap++ + *bp-- ;
      out += ((int32_t) (coeffs[i] * sum)) >> shift1 ;
    }

    return (int16_t) (out >> shift2) ; // saturated?
  }


protected:
  int half_taps, full_taps, shift1, shift2 ;
  const int16_t * coeffs ;
  int16_t * buffer ;
  int16_t * inptr, * fptr ;
};


class FIR_halfband : protected FIR_type1
{
public:
  FIR_halfband (int _half_taps, const int16_t * _coeffs, int _shift) :
    FIR_type1 (_half_taps * 2, _coeffs, _shift)
  {}

  inline void insert (int16_t in)
  {
    *inptr++ = in ;
    fptr++ ;

    if (inptr >= & buffer[2*full_taps])
    {
      int count = full_taps ;
      do
      {
	*(--fptr) = *(--inptr) ;
      } while (--count > 0) ;
    }
  }

  inline int16_t eval (void)
  {
    int16_t * ap = fptr ;
    int16_t * bp = inptr-1 ;
    int32_t out = 0 ;
    
    for (int i = 0 ; i < (half_taps>>1) ; i++)
    {
      int32_t sum = *ap++ + *bp-- ;
      ap++ ; bp-- ;
      out += ((int32_t) (coeffs[i] * sum)) >> shift1 ;
    }
    out += ((int32_t) (*++bp)) << (shift2-1) ;

    return (int16_t) (out >> shift2) ; // saturated?
  }
  
};


class FIR_1bit
{
public:
  FIR_1bit (int _byte_count, const int32_t * _coeffs, int _shift)
  {
    byte_count = _byte_count ;
    coeffs = _coeffs ;
    shift = _shift ;
    buffer = new uint32_t [_byte_count >> 1] ;
    inptr = & buffer [_byte_count >> 2] ;
    fptr  = & buffer [0] ;
  }

  inline void insert (uint32_t in)
  {
    *inptr++ = in ;
    fptr++ ;
    if (inptr >= & buffer [byte_count >> 1])
    {
      int count = byte_count>>3 ;
      do
      {
	*(--fptr) = *(--inptr) ;
	*(--fptr) = *(--inptr) ;
      } while (--count > 0);
    }
  }

  inline int16_t eval (void)
  {
    uint32_t * ap = fptr ;
    int32_t out = 0 ;
    const int32_t * co = coeffs ;

    int count = byte_count>>2 ;
    do
    {
      uint32_t word = *ap++ ;
      out += co [word >> 24] ;          co += 0x100 ;
      out += co [(word >> 16) & 0xFF] ; co += 0x100 ;
      out += co [(word >> 8) & 0xFF] ;  co += 0x100 ;
      out += co [word & 0xFF] ;         co += 0x100 ;
    } while (--count > 0) ;

    if (shift > 0)
      return (int16_t) (out >> shift) ; // saturated shift?
    else
      return (int16_t) (out << -shift) ;
  }
  
protected:
  int byte_count ;
  uint32_t * fptr, * inptr ;
  uint32_t * buffer ;
  const int32_t * coeffs ;
  int shift ;
};



////////////////////////////////////////


const int FIR0_BYTES = 32 ;
const int FIR0_SHIFT = 20-15 ;
extern const int32_t fir0_table[FIR0_BYTES << 8];

static FIR_1bit fir0 (FIR0_BYTES, fir0_table, FIR0_SHIFT-4) ;


const int HALFBAND_LEN = 63;
const int HALFBAND_TABLE_LEN = 16;
const int HALFBAND_SHIFT = 18;
const int HALFBAND_HALF_SHIFT = 17;

const int16_t halfband_table [HALFBAND_TABLE_LEN] = 
{
     -1,     3,   -13,    38,   -94,   208,  -417,   776, -1357,  2259, -3624,  5682, -8884, 14376, -26365, 
};

static FIR_halfband halfband (HALFBAND_TABLE_LEN, halfband_table, HALFBAND_SHIFT) ;


 
static inline int filter_fir0 (const uint32_t *buf)
{
  uint32_t data1 = *buf++;
  fir0.insert (data1) ;
  return fir0.eval () ;
}



void AudioInputPDM2::isr(void)
{
  uint32_t daddr;
  const uint32_t * src;
  audio_block_t * left;

  digitalWriteFast (14, HIGH);
#if defined(KINETISK)
  daddr = (uint32_t)(dma.TCD->DADDR);
#elif defined(__IMXRT1052__) || defined(__IMXRT1062__)
  daddr = (uint32_t)(dma.TCD->DADDR);
#endif
  dma.clearInterrupt();

  if (daddr < (uint32_t)pdm_buffer + sizeof(pdm_buffer) / 2)
  {
    // DMA is receiving to the first half of the buffer
    // need to remove data from the second half
    src = pdm_buffer + AUDIO_BLOCK_SAMPLES*2;
  }
  else
  {
    // DMA is receiving to the second half of the buffer
    // need to remove data from the first half
    src = pdm_buffer;
  }
  if (update_responsibility)
    AudioStream::update_all();
  
  left = block_left;
  if (left != NULL)
  {
    // TODO: should find a way to pass the unfiltered data to
    // the lower priority update.  This burns ~40% of the CPU
    // time in a high priority interrupt.  Not ideal.  :(
    int16_t *dest = left->data;
    for (int i = 0 ; i < AUDIO_BLOCK_SAMPLES*2 ; i += 2)
    {
      uint16_t s0 = filter_fir0 (src + i) ;
      uint16_t s1 = filter_fir0 (src + i+1) ;

      halfband.insert (s0) ;
      halfband.insert (s1) ;
      *dest++ = halfband.eval () ;
    }
  }
  digitalWriteFast (14, LOW);
}


void AudioInputPDM2::update(void)
{
  audio_block_t * new_left = allocate();
  
  __disable_irq();
  audio_block_t * out_left = block_left;
  block_left = new_left;
  __enable_irq();
  
  if (out_left)
  {
    transmit (out_left, 0);
    release (out_left);
  }
}

const int32_t fir0_table [FIR0_BYTES << 8] =
{
// byte 0
    -12,    -6,    -8,    -2,    -8,    -2,    -4,     2,   -10,    -4,    -6,     0,    -6,     0,    -2,     4, 
    -10,    -4,    -6,     0,    -6,     0,    -2,     4,    -8,    -2,    -4,     2,    -4,     2,     0,     6, 
    -10,    -4,    -6,     0,    -6,     0,    -2,     4,    -8,    -2,    -4,     2,    -4,     2,     0,     6, 
     -8,    -2,    -4,     2,    -4,     2,     0,     6,    -6,     0,    -2,     4,    -2,     4,     2,     8, 
    -10,    -4,    -6,     0,    -6,     0,    -2,     4,    -8,    -2,    -4,     2,    -4,     2,     0,     6, 
     -8,    -2,    -4,     2,    -4,     2,     0,     6,    -6,     0,    -2,     4,    -2,     4,     2,     8, 
     -8,    -2,    -4,     2,    -4,     2,     0,     6,    -6,     0,    -2,     4,    -2,     4,     2,     8, 
     -6,     0,    -2,     4,    -2,     4,     2,     8,    -4,     2,     0,     6,     0,     6,     4,    10, 
    -10,    -4,    -6,     0,    -6,     0,    -2,     4,    -8,    -2,    -4,     2,    -4,     2,     0,     6, 
     -8,    -2,    -4,     2,    -4,     2,     0,     6,    -6,     0,    -2,     4,    -2,     4,     2,     8, 
     -8,    -2,    -4,     2,    -4,     2,     0,     6,    -6,     0,    -2,     4,    -2,     4,     2,     8, 
     -6,     0,    -2,     4,    -2,     4,     2,     8,    -4,     2,     0,     6,     0,     6,     4,    10, 
     -8,    -2,    -4,     2,    -4,     2,     0,     6,    -6,     0,    -2,     4,    -2,     4,     2,     8, 
     -6,     0,    -2,     4,    -2,     4,     2,     8,    -4,     2,     0,     6,     0,     6,     4,    10, 
     -6,     0,    -2,     4,    -2,     4,     2,     8,    -4,     2,     0,     6,     0,     6,     4,    10, 
     -4,     2,     0,     6,     0,     6,     4,    10,    -2,     4,     2,     8,     2,     8,     6,    12, 
//  int16
// byte 1
    -49,   -29,   -33,   -13,   -35,   -15,   -19,     1,   -37,   -17,   -21,    -1,   -23,    -3,    -7,    13, 
    -37,   -17,   -21,    -1,   -23,    -3,    -7,    13,   -25,    -5,    -9,    11,   -11,     9,     5,    25, 
    -39,   -19,   -23,    -3,   -25,    -5,    -9,    11,   -27,    -7,   -11,     9,   -13,     7,     3,    23, 
    -27,    -7,   -11,     9,   -13,     7,     3,    23,   -15,     5,     1,    21,    -1,    19,    15,    35, 
    -41,   -21,   -25,    -5,   -27,    -7,   -11,     9,   -29,    -9,   -13,     7,   -15,     5,     1,    21, 
    -29,    -9,   -13,     7,   -15,     5,     1,    21,   -17,     3,    -1,    19,    -3,    17,    13,    33, 
    -31,   -11,   -15,     5,   -17,     3,    -1,    19,   -19,     1,    -3,    17,    -5,    15,    11,    31, 
    -19,     1,    -3,    17,    -5,    15,    11,    31,    -7,    13,     9,    29,     7,    27,    23,    43, 
    -43,   -23,   -27,    -7,   -29,    -9,   -13,     7,   -31,   -11,   -15,     5,   -17,     3,    -1,    19, 
    -31,   -11,   -15,     5,   -17,     3,    -1,    19,   -19,     1,    -3,    17,    -5,    15,    11,    31, 
    -33,   -13,   -17,     3,   -19,     1,    -3,    17,   -21,    -1,    -5,    15,    -7,    13,     9,    29, 
    -21,    -1,    -5,    15,    -7,    13,     9,    29,    -9,    11,     7,    27,     5,    25,    21,    41, 
    -35,   -15,   -19,     1,   -21,    -1,    -5,    15,   -23,    -3,    -7,    13,    -9,    11,     7,    27, 
    -23,    -3,    -7,    13,    -9,    11,     7,    27,   -11,     9,     5,    25,     3,    23,    19,    39, 
    -25,    -5,    -9,    11,   -11,     9,     5,    25,   -13,     7,     3,    23,     1,    21,    17,    37, 
    -13,     7,     3,    23,     1,    21,    17,    37,    -1,    19,    15,    35,    13,    33,    29,    49, 
//  int16
// byte 2
   -114,   -80,   -82,   -48,   -82,   -48,   -50,   -16,   -84,   -50,   -52,   -18,   -52,   -18,   -20,    14, 
    -86,   -52,   -54,   -20,   -54,   -20,   -22,    12,   -56,   -22,   -24,    10,   -24,    10,     8,    42, 
    -88,   -54,   -56,   -22,   -56,   -22,   -24,    10,   -58,   -24,   -26,     8,   -26,     8,     6,    40, 
    -60,   -26,   -28,     6,   -28,     6,     4,    38,   -30,     4,     2,    36,     2,    36,    34,    68, 
    -90,   -56,   -58,   -24,   -58,   -24,   -26,     8,   -60,   -26,   -28,     6,   -28,     6,     4,    38, 
    -62,   -28,   -30,     4,   -30,     4,     2,    36,   -32,     2,     0,    34,     0,    34,    32,    66, 
    -64,   -30,   -32,     2,   -32,     2,     0,    34,   -34,     0,    -2,    32,    -2,    32,    30,    64, 
    -36,    -2,    -4,    30,    -4,    30,    28,    62,    -6,    28,    26,    60,    26,    60,    58,    92, 
    -92,   -58,   -60,   -26,   -60,   -26,   -28,     6,   -62,   -28,   -30,     4,   -30,     4,     2,    36, 
    -64,   -30,   -32,     2,   -32,     2,     0,    34,   -34,     0,    -2,    32,    -2,    32,    30,    64, 
    -66,   -32,   -34,     0,   -34,     0,    -2,    32,   -36,    -2,    -4,    30,    -4,    30,    28,    62, 
    -38,    -4,    -6,    28,    -6,    28,    26,    60,    -8,    26,    24,    58,    24,    58,    56,    90, 
    -68,   -34,   -36,    -2,   -36,    -2,    -4,    30,   -38,    -4,    -6,    28,    -6,    28,    26,    60, 
    -40,    -6,    -8,    26,    -8,    26,    24,    58,   -10,    24,    22,    56,    22,    56,    54,    88, 
    -42,    -8,   -10,    24,   -10,    24,    22,    56,   -12,    22,    20,    54,    20,    54,    52,    86, 
    -14,    20,    18,    52,    18,    52,    50,    84,    16,    50,    48,    82,    48,    82,    80,   114, 
//  int16
// byte 3
    -88,   -88,   -78,   -78,   -70,   -70,   -60,   -60,   -64,   -64,   -54,   -54,   -46,   -46,   -36,   -36, 
    -60,   -60,   -50,   -50,   -42,   -42,   -32,   -32,   -36,   -36,   -26,   -26,   -18,   -18,    -8,    -8, 
    -58,   -58,   -48,   -48,   -40,   -40,   -30,   -30,   -34,   -34,   -24,   -24,   -16,   -16,    -6,    -6, 
    -30,   -30,   -20,   -20,   -12,   -12,    -2,    -2,    -6,    -6,     4,     4,    12,    12,    22,    22, 
    -56,   -56,   -46,   -46,   -38,   -38,   -28,   -28,   -32,   -32,   -22,   -22,   -14,   -14,    -4,    -4, 
    -28,   -28,   -18,   -18,   -10,   -10,     0,     0,    -4,    -4,     6,     6,    14,    14,    24,    24, 
    -26,   -26,   -16,   -16,    -8,    -8,     2,     2,    -2,    -2,     8,     8,    16,    16,    26,    26, 
      2,     2,    12,    12,    20,    20,    30,    30,    26,    26,    36,    36,    44,    44,    54,    54, 
    -54,   -54,   -44,   -44,   -36,   -36,   -26,   -26,   -30,   -30,   -20,   -20,   -12,   -12,    -2,    -2, 
    -26,   -26,   -16,   -16,    -8,    -8,     2,     2,    -2,    -2,     8,     8,    16,    16,    26,    26, 
    -24,   -24,   -14,   -14,    -6,    -6,     4,     4,     0,     0,    10,    10,    18,    18,    28,    28, 
      4,     4,    14,    14,    22,    22,    32,    32,    28,    28,    38,    38,    46,    46,    56,    56, 
    -22,   -22,   -12,   -12,    -4,    -4,     6,     6,     2,     2,    12,    12,    20,    20,    30,    30, 
      6,     6,    16,    16,    24,    24,    34,    34,    30,    30,    40,    40,    48,    48,    58,    58, 
      8,     8,    18,    18,    26,    26,    36,    36,    32,    32,    42,    42,    50,    50,    60,    60, 
     36,    36,    46,    46,    54,    54,    64,    64,    60,    60,    70,    70,    78,    78,    88,    88, 
//  int16
// byte 4
    338,   156,   192,    10,   224,    42,    78,  -104,   250,    68,   104,   -78,   136,   -46,   -10,  -192, 
    274,    92,   128,   -54,   160,   -22,    14,  -168,   186,     4,    40,  -142,    72,  -110,   -74,  -256, 
    294,   112,   148,   -34,   180,    -2,    34,  -148,   206,    24,    60,  -122,    92,   -90,   -54,  -236, 
    230,    48,    84,   -98,   116,   -66,   -30,  -212,   142,   -40,    -4,  -186,    28,  -154,  -118,  -300, 
    312,   130,   166,   -16,   198,    16,    52,  -130,   224,    42,    78,  -104,   110,   -72,   -36,  -218, 
    248,    66,   102,   -80,   134,   -48,   -12,  -194,   160,   -22,    14,  -168,    46,  -136,  -100,  -282, 
    268,    86,   122,   -60,   154,   -28,     8,  -174,   180,    -2,    34,  -148,    66,  -116,   -80,  -262, 
    204,    22,    58,  -124,    90,   -92,   -56,  -238,   116,   -66,   -30,  -212,     2,  -180,  -144,  -326, 
    326,   144,   180,    -2,   212,    30,    66,  -116,   238,    56,    92,   -90,   124,   -58,   -22,  -204, 
    262,    80,   116,   -66,   148,   -34,     2,  -180,   174,    -8,    28,  -154,    60,  -122,   -86,  -268, 
    282,   100,   136,   -46,   168,   -14,    22,  -160,   194,    12,    48,  -134,    80,  -102,   -66,  -248, 
    218,    36,    72,  -110,   104,   -78,   -42,  -224,   130,   -52,   -16,  -198,    16,  -166,  -130,  -312, 
    300,   118,   154,   -28,   186,     4,    40,  -142,   212,    30,    66,  -116,    98,   -84,   -48,  -230, 
    236,    54,    90,   -92,   122,   -60,   -24,  -206,   148,   -34,     2,  -180,    34,  -148,  -112,  -294, 
    256,    74,   110,   -72,   142,   -40,    -4,  -186,   168,   -14,    22,  -160,    54,  -128,   -92,  -274, 
    192,    10,    46,  -136,    78,  -104,   -68,  -250,   104,   -78,   -42,  -224,   -10,  -192,  -156,  -338, 
//  int16
// byte 5
   1626,  1000,  1072,   446,  1140,   514,   586,   -40,  1202,   576,   648,    22,   716,    90,   162,  -464, 
   1260,   634,   706,    80,   774,   148,   220,  -406,   836,   210,   282,  -344,   350,  -276,  -204,  -830, 
   1314,   688,   760,   134,   828,   202,   274,  -352,   890,   264,   336,  -290,   404,  -222,  -150,  -776, 
    948,   322,   394,  -232,   462,  -164,   -92,  -718,   524,  -102,   -30,  -656,    38,  -588,  -516, -1142, 
   1362,   736,   808,   182,   876,   250,   322,  -304,   938,   312,   384,  -242,   452,  -174,  -102,  -728, 
    996,   370,   442,  -184,   510,  -116,   -44,  -670,   572,   -54,    18,  -608,    86,  -540,  -468, -1094, 
   1050,   424,   496,  -130,   564,   -62,    10,  -616,   626,     0,    72,  -554,   140,  -486,  -414, -1040, 
    684,    58,   130,  -496,   198,  -428,  -356,  -982,   260,  -366,  -294,  -920,  -226,  -852,  -780, -1406, 
   1406,   780,   852,   226,   920,   294,   366,  -260,   982,   356,   428,  -198,   496,  -130,   -58,  -684, 
   1040,   414,   486,  -140,   554,   -72,     0,  -626,   616,   -10,    62,  -564,   130,  -496,  -424, -1050, 
   1094,   468,   540,   -86,   608,   -18,    54,  -572,   670,    44,   116,  -510,   184,  -442,  -370,  -996, 
    728,   102,   174,  -452,   242,  -384,  -312,  -938,   304,  -322,  -250,  -876,  -182,  -808,  -736, -1362, 
   1142,   516,   588,   -38,   656,    30,   102,  -524,   718,    92,   164,  -462,   232,  -394,  -322,  -948, 
    776,   150,   222,  -404,   290,  -336,  -264,  -890,   352,  -274,  -202,  -828,  -134,  -760,  -688, -1314, 
    830,   204,   276,  -350,   344,  -282,  -210,  -836,   406,  -220,  -148,  -774,   -80,  -706,  -634, -1260, 
    464,  -162,   -90,  -716,   -22,  -648,  -576, -1202,    40,  -586,  -514, -1140,  -446, -1072, -1000, -1626, 
//  int16
// byte 6
   4047,  2707,  2805,  1465,  2901,  1561,  1659,   319,  2997,  1657,  1755,   415,  1851,   511,   609,  -731, 
   3089,  1749,  1847,   507,  1943,   603,   701,  -639,  2039,   699,   797,  -543,   893,  -447,  -349, -1689, 
   3177,  1837,  1935,   595,  2031,   691,   789,  -551,  2127,   787,   885,  -455,   981,  -359,  -261, -1601, 
   2219,   879,   977,  -363,  1073,  -267,  -169, -1509,  1169,  -171,   -73, -1413,    23, -1317, -1219, -2559, 
   3263,  1923,  2021,   681,  2117,   777,   875,  -465,  2213,   873,   971,  -369,  1067,  -273,  -175, -1515, 
   2305,   965,  1063,  -277,  1159,  -181,   -83, -1423,  1255,   -85,    13, -1327,   109, -1231, -1133, -2473, 
   2393,  1053,  1151,  -189,  1247,   -93,     5, -1335,  1343,     3,   101, -1239,   197, -1143, -1045, -2385, 
   1435,    95,   193, -1147,   289, -1051,  -953, -2293,   385,  -955,  -857, -2197,  -761, -2101, -2003, -3343, 
   3343,  2003,  2101,   761,  2197,   857,   955,  -385,  2293,   953,  1051,  -289,  1147,  -193,   -95, -1435, 
   2385,  1045,  1143,  -197,  1239,  -101,    -3, -1343,  1335,    -5,    93, -1247,   189, -1151, -1053, -2393, 
   2473,  1133,  1231,  -109,  1327,   -13,    85, -1255,  1423,    83,   181, -1159,   277, -1063,  -965, -2305, 
   1515,   175,   273, -1067,   369,  -971,  -873, -2213,   465,  -875,  -777, -2117,  -681, -2021, -1923, -3263, 
   2559,  1219,  1317,   -23,  1413,    73,   171, -1169,  1509,   169,   267, -1073,   363,  -977,  -879, -2219, 
   1601,   261,   359,  -981,   455,  -885,  -787, -2127,   551,  -789,  -691, -2031,  -595, -1935, -1837, -3177, 
   1689,   349,   447,  -893,   543,  -797,  -699, -2039,   639,  -701,  -603, -1943,  -507, -1847, -1749, -3089, 
    731,  -609,  -511, -1851,  -415, -1755, -1657, -2997,  -319, -1659, -1561, -2901, -1465, -2805, -2707, -4047, 
//  int16
// byte 7
   6989,  4971,  5033,  3015,  5105,  3087,  3149,  1131,  5185,  3167,  3229,  1211,  3301,  1283,  1345,  -673, 
   5271,  3253,  3315,  1297,  3387,  1369,  1431,  -587,  3467,  1449,  1511,  -507,  1583,  -435,  -373, -2391, 
   5361,  3343,  3405,  1387,  3477,  1459,  1521,  -497,  3557,  1539,  1601,  -417,  1673,  -345,  -283, -2301, 
   3643,  1625,  1687,  -331,  1759,  -259,  -197, -2215,  1839,  -179,  -117, -2135,   -45, -2063, -2001, -4019, 
   5455,  3437,  3499,  1481,  3571,  1553,  1615,  -403,  3651,  1633,  1695,  -323,  1767,  -251,  -189, -2207, 
   3737,  1719,  1781,  -237,  1853,  -165,  -103, -2121,  1933,   -85,   -23, -2041,    49, -1969, -1907, -3925, 
   3827,  1809,  1871,  -147,  1943,   -75,   -13, -2031,  2023,     5,    67, -1951,   139, -1879, -1817, -3835, 
   2109,    91,   153, -1865,   225, -1793, -1731, -3749,   305, -1713, -1651, -3669, -1579, -3597, -3535, -5553, 
   5553,  3535,  3597,  1579,  3669,  1651,  1713,  -305,  3749,  1731,  1793,  -225,  1865,  -153,   -91, -2109, 
   3835,  1817,  1879,  -139,  1951,   -67,    -5, -2023,  2031,    13,    75, -1943,   147, -1871, -1809, -3827, 
   3925,  1907,  1969,   -49,  2041,    23,    85, -1933,  2121,   103,   165, -1853,   237, -1781, -1719, -3737, 
   2207,   189,   251, -1767,   323, -1695, -1633, -3651,   403, -1615, -1553, -3571, -1481, -3499, -3437, -5455, 
   4019,  2001,  2063,    45,  2135,   117,   179, -1839,  2215,   197,   259, -1759,   331, -1687, -1625, -3643, 
   2301,   283,   345, -1673,   417, -1601, -1539, -3557,   497, -1521, -1459, -3477, -1387, -3405, -3343, -5361, 
   2391,   373,   435, -1583,   507, -1511, -1449, -3467,   587, -1431, -1369, -3387, -1297, -3315, -3253, -5271, 
    673, -1345, -1283, -3301, -1211, -3229, -3167, -5185, -1131, -3149, -3087, -5105, -3015, -5033, -4971, -6989, 
//  int16
// byte 8
   8294,  6364,  6274,  4344,  6214,  4284,  4194,  2264,  6176,  4246,  4156,  2226,  4096,  2166,  2076,   146, 
   6160,  4230,  4140,  2210,  4080,  2150,  2060,   130,  4042,  2112,  2022,    92,  1962,    32,   -58, -1988, 
   6166,  4236,  4146,  2216,  4086,  2156,  2066,   136,  4048,  2118,  2028,    98,  1968,    38,   -52, -1982, 
   4032,  2102,  2012,    82,  1952,    22,   -68, -1998,  1914,   -16,  -106, -2036,  -166, -2096, -2186, -4116, 
   6186,  4256,  4166,  2236,  4106,  2176,  2086,   156,  4068,  2138,  2048,   118,  1988,    58,   -32, -1962, 
   4052,  2122,  2032,   102,  1972,    42,   -48, -1978,  1934,     4,   -86, -2016,  -146, -2076, -2166, -4096, 
   4058,  2128,  2038,   108,  1978,    48,   -42, -1972,  1940,    10,   -80, -2010,  -140, -2070, -2160, -4090, 
   1924,    -6,   -96, -2026,  -156, -2086, -2176, -4106,  -194, -2124, -2214, -4144, -2274, -4204, -4294, -6224, 
   6224,  4294,  4204,  2274,  4144,  2214,  2124,   194,  4106,  2176,  2086,   156,  2026,    96,     6, -1924, 
   4090,  2160,  2070,   140,  2010,    80,   -10, -1940,  1972,    42,   -48, -1978,  -108, -2038, -2128, -4058, 
   4096,  2166,  2076,   146,  2016,    86,    -4, -1934,  1978,    48,   -42, -1972,  -102, -2032, -2122, -4052, 
   1962,    32,   -58, -1988,  -118, -2048, -2138, -4068,  -156, -2086, -2176, -4106, -2236, -4166, -4256, -6186, 
   4116,  2186,  2096,   166,  2036,   106,    16, -1914,  1998,    68,   -22, -1952,   -82, -2012, -2102, -4032, 
   1982,    52,   -38, -1968,   -98, -2028, -2118, -4048,  -136, -2066, -2156, -4086, -2216, -4146, -4236, -6166, 
   1988,    58,   -32, -1962,   -92, -2022, -2112, -4042,  -130, -2060, -2150, -4080, -2210, -4140, -4230, -6160, 
   -146, -2076, -2166, -4096, -2226, -4156, -4246, -6176, -2264, -4194, -4284, -6214, -4344, -6274, -6364, -8294, 
//  int16
// byte 9
   4171,  4171,  3791,  3791,  3453,  3453,  3073,  3073,  3159,  3159,  2779,  2779,  2441,  2441,  2061,  2061, 
   2903,  2903,  2523,  2523,  2185,  2185,  1805,  1805,  1891,  1891,  1511,  1511,  1173,  1173,   793,   793, 
   2687,  2687,  2307,  2307,  1969,  1969,  1589,  1589,  1675,  1675,  1295,  1295,   957,   957,   577,   577, 
   1419,  1419,  1039,  1039,   701,   701,   321,   321,   407,   407,    27,    27,  -311,  -311,  -691,  -691, 
   2505,  2505,  2125,  2125,  1787,  1787,  1407,  1407,  1493,  1493,  1113,  1113,   775,   775,   395,   395, 
   1237,  1237,   857,   857,   519,   519,   139,   139,   225,   225,  -155,  -155,  -493,  -493,  -873,  -873, 
   1021,  1021,   641,   641,   303,   303,   -77,   -77,     9,     9,  -371,  -371,  -709,  -709, -1089, -1089, 
   -247,  -247,  -627,  -627,  -965,  -965, -1345, -1345, -1259, -1259, -1639, -1639, -1977, -1977, -2357, -2357, 
   2357,  2357,  1977,  1977,  1639,  1639,  1259,  1259,  1345,  1345,   965,   965,   627,   627,   247,   247, 
   1089,  1089,   709,   709,   371,   371,    -9,    -9,    77,    77,  -303,  -303,  -641,  -641, -1021, -1021, 
    873,   873,   493,   493,   155,   155,  -225,  -225,  -139,  -139,  -519,  -519,  -857,  -857, -1237, -1237, 
   -395,  -395,  -775,  -775, -1113, -1113, -1493, -1493, -1407, -1407, -1787, -1787, -2125, -2125, -2505, -2505, 
    691,   691,   311,   311,   -27,   -27,  -407,  -407,  -321,  -321,  -701,  -701, -1039, -1039, -1419, -1419, 
   -577,  -577,  -957,  -957, -1295, -1295, -1675, -1675, -1589, -1589, -1969, -1969, -2307, -2307, -2687, -2687, 
   -793,  -793, -1173, -1173, -1511, -1511, -1891, -1891, -1805, -1805, -2185, -2185, -2523, -2523, -2903, -2903, 
  -2061, -2061, -2441, -2441, -2779, -2779, -3159, -3159, -3073, -3073, -3453, -3453, -3791, -3791, -4171, -4171, 
//  int16
// byte 10
  -9708, -4928, -5702,  -922, -6424, -1644, -2418,  2362, -7096, -2316, -3090,  1690, -3812,   968,   194,  4974, 
  -7718, -2938, -3712,  1068, -4434,   346,  -428,  4352, -5106,  -326, -1100,  3680, -1822,  2958,  2184,  6964, 
  -8288, -3508, -4282,   498, -5004,  -224,  -998,  3782, -5676,  -896, -1670,  3110, -2392,  2388,  1614,  6394, 
  -6298, -1518, -2292,  2488, -3014,  1766,   992,  5772, -3686,  1094,   320,  5100,  -402,  4378,  3604,  8384, 
  -8810, -4030, -4804,   -24, -5526,  -746, -1520,  3260, -6198, -1418, -2192,  2588, -2914,  1866,  1092,  5872, 
  -6820, -2040, -2814,  1966, -3536,  1244,   470,  5250, -4208,   572,  -202,  4578,  -924,  3856,  3082,  7862, 
  -7390, -2610, -3384,  1396, -4106,   674,  -100,  4680, -4778,     2,  -772,  4008, -1494,  3286,  2512,  7292, 
  -5400,  -620, -1394,  3386, -2116,  2664,  1890,  6670, -2788,  1992,  1218,  5998,   496,  5276,  4502,  9282, 
  -9282, -4502, -5276,  -496, -5998, -1218, -1992,  2788, -6670, -1890, -2664,  2116, -3386,  1394,   620,  5400, 
  -7292, -2512, -3286,  1494, -4008,   772,    -2,  4778, -4680,   100,  -674,  4106, -1396,  3384,  2610,  7390, 
  -7862, -3082, -3856,   924, -4578,   202,  -572,  4208, -5250,  -470, -1244,  3536, -1966,  2814,  2040,  6820, 
  -5872, -1092, -1866,  2914, -2588,  2192,  1418,  6198, -3260,  1520,   746,  5526,    24,  4804,  4030,  8810, 
  -8384, -3604, -4378,   402, -5100,  -320, -1094,  3686, -5772,  -992, -1766,  3014, -2488,  2292,  1518,  6298, 
  -6394, -1614, -2388,  2392, -3110,  1670,   896,  5676, -3782,   998,   224,  5004,  -498,  4282,  3508,  8288, 
  -6964, -2184, -2958,  1822, -3680,  1100,   326,  5106, -4352,   428,  -346,  4434, -1068,  3712,  2938,  7718, 
  -4974,  -194,  -968,  3812, -1690,  3090,  2316,  7096, -2362,  2418,  1644,  6424,   922,  5702,  4928,  9708, 
//  int16
// byte 11
  -36033, -23303, -24453, -11723, -25561, -12831, -13981, -1251, -26629, -13899, -15049, -2319, -16157, -3427, -4577,  8153, 
  -27649, -14919, -16069, -3339, -17177, -4447, -5597,  7133, -18245, -5515, -6665,  6065, -7773,  4957,  3807, 16537, 
  -28625, -15895, -17045, -4315, -18153, -5423, -6573,  6157, -19221, -6491, -7641,  5089, -8749,  3981,  2831, 15561, 
  -20241, -7511, -8661,  4069, -9769,  2961,  1811, 14541, -10837,  1893,   743, 13473,  -365, 12365, 11215, 23945, 
  -29551, -16821, -17971, -5241, -19079, -6349, -7499,  5231, -20147, -7417, -8567,  4163, -9675,  3055,  1905, 14635, 
  -21167, -8437, -9587,  3143, -10695,  2035,   885, 13615, -11763,   967,  -183, 12547, -1291, 11439, 10289, 23019, 
  -22143, -9413, -10563,  2167, -11671,  1059,   -91, 12639, -12739,    -9, -1159, 11571, -2267, 10463,  9313, 22043, 
  -13759, -1029, -2179, 10551, -3287,  9443,  8293, 21023, -4355,  8375,  7225, 19955,  6117, 18847, 17697, 30427, 
  -30427, -17697, -18847, -6117, -19955, -7225, -8375,  4355, -21023, -8293, -9443,  3287, -10551,  2179,  1029, 13759, 
  -22043, -9313, -10463,  2267, -11571,  1159,     9, 12739, -12639,    91, -1059, 11671, -2167, 10563,  9413, 22143, 
  -23019, -10289, -11439,  1291, -12547,   183,  -967, 11763, -13615,  -885, -2035, 10695, -3143,  9587,  8437, 21167, 
  -14635, -1905, -3055,  9675, -4163,  8567,  7417, 20147, -5231,  7499,  6349, 19079,  5241, 17971, 16821, 29551, 
  -23945, -11215, -12365,   365, -13473,  -743, -1893, 10837, -14541, -1811, -2961,  9769, -4069,  8661,  7511, 20241, 
  -15561, -2831, -3981,  8749, -5089,  7641,  6491, 19221, -6157,  6573,  5423, 18153,  4315, 17045, 15895, 28625, 
  -16537, -3807, -4957,  7773, -6065,  6665,  5515, 18245, -7133,  5597,  4447, 17177,  3339, 16069, 14919, 27649, 
  -8153,  4577,  3427, 16157,  2319, 15049, 13899, 26629,  1251, 13981, 12831, 25561, 11723, 24453, 23303, 36033, 
//  int32
// byte 12
  -73492, -50524, -51866, -28898, -53198, -30230, -31572, -8604, -54518, -31550, -32892, -9924, -34224, -11256, -12598, 10370, 
  -55820, -32852, -34194, -11226, -35526, -12558, -13900,  9068, -36846, -13878, -15220,  7748, -16552,  6416,  5074, 28042, 
  -57100, -34132, -35474, -12506, -36806, -13838, -15180,  7788, -38126, -15158, -16500,  6468, -17832,  5136,  3794, 26762, 
  -39428, -16460, -17802,  5166, -19134,  3834,  2492, 25460, -20454,  2514,  1172, 24140,  -160, 22808, 21466, 44434, 
  -58352, -35384, -36726, -13758, -38058, -15090, -16432,  6536, -39378, -16410, -17752,  5216, -19084,  3884,  2542, 25510, 
  -40680, -17712, -19054,  3914, -20386,  2582,  1240, 24208, -21706,  1262,   -80, 22888, -1412, 21556, 20214, 43182, 
  -41960, -18992, -20334,  2634, -21666,  1302,   -40, 22928, -22986,   -18, -1360, 21608, -2692, 20276, 18934, 41902, 
  -24288, -1320, -2662, 20306, -3994, 18974, 17632, 40600, -5314, 17654, 16312, 39280, 14980, 37948, 36606, 59574, 
  -59574, -36606, -37948, -14980, -39280, -16312, -17654,  5314, -40600, -17632, -18974,  3994, -20306,  2662,  1320, 24288, 
  -41902, -18934, -20276,  2692, -21608,  1360,    18, 22986, -22928,    40, -1302, 21666, -2634, 20334, 18992, 41960, 
  -43182, -20214, -21556,  1412, -22888,    80, -1262, 21706, -24208, -1240, -2582, 20386, -3914, 19054, 17712, 40680, 
  -25510, -2542, -3884, 19084, -5216, 17752, 16410, 39378, -6536, 16432, 15090, 38058, 13758, 36726, 35384, 58352, 
  -44434, -21466, -22808,   160, -24140, -1172, -2514, 20454, -25460, -2492, -3834, 19134, -5166, 17802, 16460, 39428, 
  -26762, -3794, -5136, 17832, -6468, 16500, 15158, 38126, -7788, 15180, 13838, 36806, 12506, 35474, 34132, 57100, 
  -28042, -5074, -6416, 16552, -7748, 15220, 13878, 36846, -9068, 13900, 12558, 35526, 11226, 34194, 32852, 55820, 
  -10370, 12598, 11256, 34224,  9924, 32892, 31550, 54518,  8604, 31572, 30230, 53198, 28898, 51866, 50524, 73492, 
//  int32
// byte 13
  -115677, -82301, -83519, -50143, -84771, -51395, -52613, -19237, -86051, -52675, -53893, -20517, -55145, -21769, -22987, 10389, 
  -87357, -53981, -55199, -21823, -56451, -23075, -24293,  9083, -57731, -24355, -25573,  7803, -26825,  6551,  5333, 38709, 
  -88681, -55305, -56523, -23147, -57775, -24399, -25617,  7759, -59055, -25679, -26897,  6479, -28149,  5227,  4009, 37385, 
  -60361, -26985, -28203,  5173, -29455,  3921,  2703, 36079, -30735,  2641,  1423, 34799,   171, 33547, 32329, 65705, 
  -90019, -56643, -57861, -24485, -59113, -25737, -26955,  6421, -60393, -27017, -28235,  5141, -29487,  3889,  2671, 36047, 
  -61699, -28323, -29541,  3835, -30793,  2583,  1365, 34741, -32073,  1303,    85, 33461, -1167, 32209, 30991, 64367, 
  -63023, -29647, -30865,  2511, -32117,  1259,    41, 33417, -33397,   -21, -1239, 32137, -2491, 30885, 29667, 63043, 
  -34703, -1327, -2545, 30831, -3797, 29579, 28361, 61737, -5077, 28299, 27081, 60457, 25829, 59205, 57987, 91363, 
  -91363, -57987, -59205, -25829, -60457, -27081, -28299,  5077, -61737, -28361, -29579,  3797, -30831,  2545,  1327, 34703, 
  -63043, -29667, -30885,  2491, -32137,  1239,    21, 33397, -33417,   -41, -1259, 32117, -2511, 30865, 29647, 63023, 
  -64367, -30991, -32209,  1167, -33461,   -85, -1303, 32073, -34741, -1365, -2583, 30793, -3835, 29541, 28323, 61699, 
  -36047, -2671, -3889, 29487, -5141, 28235, 27017, 60393, -6421, 26955, 25737, 59113, 24485, 57861, 56643, 90019, 
  -65705, -32329, -33547,  -171, -34799, -1423, -2641, 30735, -36079, -2703, -3921, 29455, -5173, 28203, 26985, 60361, 
  -37385, -4009, -5227, 28149, -6479, 26897, 25679, 59055, -7759, 25617, 24399, 57775, 23147, 56523, 55305, 88681, 
  -38709, -5333, -6551, 26825, -7803, 25573, 24355, 57731, -9083, 24293, 23075, 56451, 21823, 55199, 53981, 87357, 
  -10389, 22987, 21769, 55145, 20517, 53893, 52675, 86051, 19237, 52613, 51395, 84771, 50143, 83519, 82301, 115677, 
//  int32
// byte 14
  -152392, -111194, -111940, -70742, -112762, -71564, -72310, -31112, -113654, -72456, -73202, -32004, -74024, -32826, -33572,  7626, 
  -114614, -73416, -74162, -32964, -74984, -33786, -34532,  6666, -75876, -34678, -35424,  5774, -36246,  4952,  4206, 45404, 
  -115634, -74436, -75182, -33984, -76004, -34806, -35552,  5646, -76896, -35698, -36444,  4754, -37266,  3932,  3186, 44384, 
  -77856, -36658, -37404,  3794, -38226,  2972,  2226, 43424, -39118,  2080,  1334, 42532,   512, 41710, 40964, 82162, 
  -116712, -75514, -76260, -35062, -77082, -35884, -36630,  4568, -77974, -36776, -37522,  3676, -38344,  2854,  2108, 43306, 
  -78934, -37736, -38482,  2716, -39304,  1894,  1148, 42346, -40196,  1002,   256, 41454,  -566, 40632, 39886, 81084, 
  -79954, -38756, -39502,  1696, -40324,   874,   128, 41326, -41216,   -18,  -764, 40434, -1586, 39612, 38866, 80064, 
  -42176,  -978, -1724, 39474, -2546, 38652, 37906, 79104, -3438, 37760, 37014, 78212, 36192, 77390, 76644, 117842, 
  -117842, -76644, -77390, -36192, -78212, -37014, -37760,  3438, -79104, -37906, -38652,  2546, -39474,  1724,   978, 42176, 
  -80064, -38866, -39612,  1586, -40434,   764,    18, 41216, -41326,  -128,  -874, 40324, -1696, 39502, 38756, 79954, 
  -81084, -39886, -40632,   566, -41454,  -256, -1002, 40196, -42346, -1148, -1894, 39304, -2716, 38482, 37736, 78934, 
  -43306, -2108, -2854, 38344, -3676, 37522, 36776, 77974, -4568, 36630, 35884, 77082, 35062, 76260, 75514, 116712, 
  -82162, -40964, -41710,  -512, -42532, -1334, -2080, 39118, -43424, -2226, -2972, 38226, -3794, 37404, 36658, 77856, 
  -44384, -3186, -3932, 37266, -4754, 36444, 35698, 76896, -5646, 35552, 34806, 76004, 33984, 75182, 74436, 115634, 
  -45404, -4206, -4952, 36246, -5774, 35424, 34678, 75876, -6666, 34532, 33786, 74984, 32964, 74162, 73416, 114614, 
  -7626, 33572, 32826, 74024, 32004, 73202, 72456, 113654, 31112, 72310, 71564, 112762, 70742, 111940, 111194, 152392, 
//  int32
// byte 15
  -173215, -129105, -129151, -85041, -129291, -85181, -85227, -41117, -129523, -85413, -85459, -41349, -85599, -41489, -41535,  2575, 
  -129847, -85737, -85783, -41673, -85923, -41813, -41859,  2251, -86155, -42045, -42091,  2019, -42231,  1879,  1833, 45943, 
  -130261, -86151, -86197, -42087, -86337, -42227, -42273,  1837, -86569, -42459, -42505,  1605, -42645,  1465,  1419, 45529, 
  -86893, -42783, -42829,  1281, -42969,  1141,  1095, 45205, -43201,   909,   863, 44973,   723, 44833, 44787, 88897, 
  -130763, -86653, -86699, -42589, -86839, -42729, -42775,  1335, -87071, -42961, -43007,  1103, -43147,   963,   917, 45027, 
  -87395, -43285, -43331,   779, -43471,   639,   593, 44703, -43703,   407,   361, 44471,   221, 44331, 44285, 88395, 
  -87809, -43699, -43745,   365, -43885,   225,   179, 44289, -44117,    -7,   -53, 44057,  -193, 43917, 43871, 87981, 
  -44441,  -331,  -377, 43733,  -517, 43593, 43547, 87657,  -749, 43361, 43315, 87425, 43175, 87285, 87239, 131349, 
  -131349, -87239, -87285, -43175, -87425, -43315, -43361,   749, -87657, -43547, -43593,   517, -43733,   377,   331, 44441, 
  -87981, -43871, -43917,   193, -44057,    53,     7, 44117, -44289,  -179,  -225, 43885,  -365, 43745, 43699, 87809, 
  -88395, -44285, -44331,  -221, -44471,  -361,  -407, 43703, -44703,  -593,  -639, 43471,  -779, 43331, 43285, 87395, 
  -45027,  -917,  -963, 43147, -1103, 43007, 42961, 87071, -1335, 42775, 42729, 86839, 42589, 86699, 86653, 130763, 
  -88897, -44787, -44833,  -723, -44973,  -863,  -909, 43201, -45205, -1095, -1141, 42969, -1281, 42829, 42783, 86893, 
  -45529, -1419, -1465, 42645, -1605, 42505, 42459, 86569, -1837, 42273, 42227, 86337, 42087, 86197, 86151, 130261, 
  -45943, -1833, -1879, 42231, -2019, 42091, 42045, 86155, -2251, 41859, 41813, 85923, 41673, 85783, 85737, 129847, 
  -2575, 41535, 41489, 85599, 41349, 85459, 85413, 129523, 41117, 85227, 85181, 129291, 85041, 129151, 129105, 173215, 
//  int32
// byte 16
  -171759, -130561, -129893, -88695, -129307, -88109, -87441, -46243, -128805, -87607, -86939, -45741, -86353, -45155, -44487, -3289, 
  -128391, -87193, -86525, -45327, -85939, -44741, -44073, -2875, -85437, -44239, -43571, -2373, -42985, -1787, -1119, 40079, 
  -128067, -86869, -86201, -45003, -85615, -44417, -43749, -2551, -85113, -43915, -43247, -2049, -42661, -1463,  -795, 40403, 
  -84699, -43501, -42833, -1635, -42247, -1049,  -381, 40817, -41745,  -547,   121, 41319,   707, 41905, 42573, 83771, 
  -127835, -86637, -85969, -44771, -85383, -44185, -43517, -2319, -84881, -43683, -43015, -1817, -42429, -1231,  -563, 40635, 
  -84467, -43269, -42601, -1403, -42015,  -817,  -149, 41049, -41513,  -315,   353, 41551,   939, 42137, 42805, 84003, 
  -84143, -42945, -42277, -1079, -41691,  -493,   175, 41373, -41189,     9,   677, 41875,  1263, 42461, 43129, 84327, 
  -40775,   423,  1091, 42289,  1677, 42875, 43543, 84741,  2179, 43377, 44045, 85243, 44631, 85829, 86497, 127695, 
  -127695, -86497, -85829, -44631, -85243, -44045, -43377, -2179, -84741, -43543, -42875, -1677, -42289, -1091,  -423, 40775, 
  -84327, -43129, -42461, -1263, -41875,  -677,    -9, 41189, -41373,  -175,   493, 41691,  1079, 42277, 42945, 84143, 
  -84003, -42805, -42137,  -939, -41551,  -353,   315, 41513, -41049,   149,   817, 42015,  1403, 42601, 43269, 84467, 
  -40635,   563,  1231, 42429,  1817, 43015, 43683, 84881,  2319, 43517, 44185, 85383, 44771, 85969, 86637, 127835, 
  -83771, -42573, -41905,  -707, -41319,  -121,   547, 41745, -40817,   381,  1049, 42247,  1635, 42833, 43501, 84699, 
  -40403,   795,  1463, 42661,  2049, 43247, 43915, 85113,  2551, 43749, 44417, 85615, 45003, 86201, 86869, 128067, 
  -40079,  1119,  1787, 42985,  2373, 43571, 44239, 85437,  2875, 44073, 44741, 85939, 45327, 86525, 87193, 128391, 
   3289, 44487, 45155, 86353, 45741, 86939, 87607, 128805, 46243, 87441, 88109, 129307, 88695, 129893, 130561, 171759, 
//  int32
// byte 17
  -148481, -115105, -113931, -80555, -112801, -79425, -78251, -44875, -111723, -78347, -77173, -43797, -76043, -42667, -41493, -8117, 
  -110703, -77327, -76153, -42777, -75023, -41647, -40473, -7097, -73945, -40569, -39395, -6019, -38265, -4889, -3715, 29661, 
  -109743, -76367, -75193, -41817, -74063, -40687, -39513, -6137, -72985, -39609, -38435, -5059, -37305, -3929, -2755, 30621, 
  -71965, -38589, -37415, -4039, -36285, -2909, -1735, 31641, -35207, -1831,  -657, 32719,   473, 33849, 35023, 68399, 
  -108851, -75475, -74301, -40925, -73171, -39795, -38621, -5245, -72093, -38717, -37543, -4167, -36413, -3037, -1863, 31513, 
  -71073, -37697, -36523, -3147, -35393, -2017,  -843, 32533, -34315,  -939,   235, 33611,  1365, 34741, 35915, 69291, 
  -70113, -36737, -35563, -2187, -34433, -1057,   117, 33493, -33355,    21,  1195, 34571,  2325, 35701, 36875, 70251, 
  -32335,  1041,  2215, 35591,  3345, 36721, 37895, 71271,  4423, 37799, 38973, 72349, 40103, 73479, 74653, 108029, 
  -108029, -74653, -73479, -40103, -72349, -38973, -37799, -4423, -71271, -37895, -36721, -3345, -35591, -2215, -1041, 32335, 
  -70251, -36875, -35701, -2325, -34571, -1195,   -21, 33355, -33493,  -117,  1057, 34433,  2187, 35563, 36737, 70113, 
  -69291, -35915, -34741, -1365, -33611,  -235,   939, 34315, -32533,   843,  2017, 35393,  3147, 36523, 37697, 71073, 
  -31513,  1863,  3037, 36413,  4167, 37543, 38717, 72093,  5245, 38621, 39795, 73171, 40925, 74301, 75475, 108851, 
  -68399, -35023, -33849,  -473, -32719,   657,  1831, 35207, -31641,  1735,  2909, 36285,  4039, 37415, 38589, 71965, 
  -30621,  2755,  3929, 37305,  5059, 38435, 39609, 72985,  6137, 39513, 40687, 74063, 41817, 75193, 76367, 109743, 
  -29661,  3715,  4889, 38265,  6019, 39395, 40569, 73945,  7097, 40473, 41647, 75023, 42777, 76153, 77327, 110703, 
   8117, 41493, 42667, 76043, 43797, 77173, 78347, 111723, 44875, 78251, 79425, 112801, 80555, 113931, 115105, 148481, 
//  int32
// byte 18
  -110473, -87505, -86159, -63191, -84815, -61847, -60501, -37533, -83477, -60509, -59163, -36195, -57819, -34851, -33505, -10537, 
  -82153, -59185, -57839, -34871, -56495, -33527, -32181, -9213, -55157, -32189, -30843, -7875, -29499, -6531, -5185, 17783, 
  -80847, -57879, -56533, -33565, -55189, -32221, -30875, -7907, -53851, -30883, -29537, -6569, -28193, -5225, -3879, 19089, 
  -52527, -29559, -28213, -5245, -26869, -3901, -2555, 20413, -25531, -2563, -1217, 21751,   127, 23095, 24441, 47409, 
  -79567, -56599, -55253, -32285, -53909, -30941, -29595, -6627, -52571, -29603, -28257, -5289, -26913, -3945, -2599, 20369, 
  -51247, -28279, -26933, -3965, -25589, -2621, -1275, 21693, -24251, -1283,    63, 23031,  1407, 24375, 25721, 48689, 
  -49941, -26973, -25627, -2659, -24283, -1315,    31, 22999, -22945,    23,  1369, 24337,  2713, 25681, 27027, 49995, 
  -21621,  1347,  2693, 25661,  4037, 27005, 28351, 51319,  5375, 28343, 29689, 52657, 31033, 54001, 55347, 78315, 
  -78315, -55347, -54001, -31033, -52657, -29689, -28343, -5375, -51319, -28351, -27005, -4037, -25661, -2693, -1347, 21621, 
  -49995, -27027, -25681, -2713, -24337, -1369,   -23, 22945, -22999,   -31,  1315, 24283,  2659, 25627, 26973, 49941, 
  -48689, -25721, -24375, -1407, -23031,   -63,  1283, 24251, -21693,  1275,  2621, 25589,  3965, 26933, 28279, 51247, 
  -20369,  2599,  3945, 26913,  5289, 28257, 29603, 52571,  6627, 29595, 30941, 53909, 32285, 55253, 56599, 79567, 
  -47409, -24441, -23095,  -127, -21751,  1217,  2563, 25531, -20413,  2555,  3901, 26869,  5245, 28213, 29559, 52527, 
  -19089,  3879,  5225, 28193,  6569, 29537, 30883, 53851,  7907, 30875, 32221, 55189, 33565, 56533, 57879, 80847, 
  -17783,  5185,  6531, 29499,  7875, 30843, 32189, 55157,  9213, 32181, 33527, 56495, 34871, 57839, 59185, 82153, 
  10537, 33505, 34851, 57819, 36195, 59163, 60509, 83477, 37533, 60501, 61847, 84815, 63191, 86159, 87505, 110473, 
//  int32
// byte 19
  -68373, -55643, -54455, -41725, -53233, -40503, -39315, -26585, -51981, -39251, -38063, -25333, -36841, -24111, -22923, -10193, 
  -50701, -37971, -36783, -24053, -35561, -22831, -21643, -8913, -34309, -21579, -20391, -7661, -19169, -6439, -5251,  7479, 
  -49399, -36669, -35481, -22751, -34259, -21529, -20341, -7611, -33007, -20277, -19089, -6359, -17867, -5137, -3949,  8781, 
  -31727, -18997, -17809, -5079, -16587, -3857, -2669, 10061, -15335, -2605, -1417, 11313,  -195, 12535, 13723, 26453, 
  -48079, -35349, -34161, -21431, -32939, -20209, -19021, -6291, -31687, -18957, -17769, -5039, -16547, -3817, -2629, 10101, 
  -30407, -17677, -16489, -3759, -15267, -2537, -1349, 11381, -14015, -1285,   -97, 12633,  1125, 13855, 15043, 27773, 
  -29105, -16375, -15187, -2457, -13965, -1235,   -47, 12683, -12713,    17,  1205, 13935,  2427, 15157, 16345, 29075, 
  -11433,  1297,  2485, 15215,  3707, 16437, 17625, 30355,  4959, 17689, 18877, 31607, 20099, 32829, 34017, 46747, 
  -46747, -34017, -32829, -20099, -31607, -18877, -17689, -4959, -30355, -17625, -16437, -3707, -15215, -2485, -1297, 11433, 
  -29075, -16345, -15157, -2427, -13935, -1205,   -17, 12713, -12683,    47,  1235, 13965,  2457, 15187, 16375, 29105, 
  -27773, -15043, -13855, -1125, -12633,    97,  1285, 14015, -11381,  1349,  2537, 15267,  3759, 16489, 17677, 30407, 
  -10101,  2629,  3817, 16547,  5039, 17769, 18957, 31687,  6291, 19021, 20209, 32939, 21431, 34161, 35349, 48079, 
  -26453, -13723, -12535,   195, -11313,  1417,  2605, 15335, -10061,  2669,  3857, 16587,  5079, 17809, 18997, 31727, 
  -8781,  3949,  5137, 17867,  6359, 19089, 20277, 33007,  7611, 20341, 21529, 34259, 22751, 35481, 36669, 49399, 
  -7479,  5251,  6439, 19169,  7661, 20391, 21579, 34309,  8913, 21643, 22831, 35561, 24053, 36783, 37971, 50701, 
  10193, 22923, 24111, 36841, 25333, 38063, 39251, 51981, 26585, 39315, 40503, 53233, 41725, 54455, 55643, 68373, 
//  int32
// byte 20
  -32058, -27278, -26452, -21672, -25576, -20796, -19970, -15190, -24650, -19870, -19044, -14264, -18168, -13388, -12562, -7782, 
  -23674, -18894, -18068, -13288, -17192, -12412, -11586, -6806, -16266, -11486, -10660, -5880, -9784, -5004, -4178,   602, 
  -22654, -17874, -17048, -12268, -16172, -11392, -10566, -5786, -15246, -10466, -9640, -4860, -8764, -3984, -3158,  1622, 
  -14270, -9490, -8664, -3884, -7788, -3008, -2182,  2598, -6862, -2082, -1256,  3524,  -380,  4400,  5226, 10006, 
  -21586, -16806, -15980, -11200, -15104, -10324, -9498, -4718, -14178, -9398, -8572, -3792, -7696, -2916, -2090,  2690, 
  -13202, -8422, -7596, -2816, -6720, -1940, -1114,  3666, -5794, -1014,  -188,  4592,   688,  5468,  6294, 11074, 
  -12182, -7402, -6576, -1796, -5700,  -920,   -94,  4686, -4774,     6,   832,  5612,  1708,  6488,  7314, 12094, 
  -3798,   982,  1808,  6588,  2684,  7464,  8290, 13070,  3610,  8390,  9216, 13996, 10092, 14872, 15698, 20478, 
  -20478, -15698, -14872, -10092, -13996, -9216, -8390, -3610, -13070, -8290, -7464, -2684, -6588, -1808,  -982,  3798, 
  -12094, -7314, -6488, -1708, -5612,  -832,    -6,  4774, -4686,    94,   920,  5700,  1796,  6576,  7402, 12182, 
  -11074, -6294, -5468,  -688, -4592,   188,  1014,  5794, -3666,  1114,  1940,  6720,  2816,  7596,  8422, 13202, 
  -2690,  2090,  2916,  7696,  3792,  8572,  9398, 14178,  4718,  9498, 10324, 15104, 11200, 15980, 16806, 21586, 
  -10006, -5226, -4400,   380, -3524,  1256,  2082,  6862, -2598,  2182,  3008,  7788,  3884,  8664,  9490, 14270, 
  -1622,  3158,  3984,  8764,  4860,  9640, 10466, 15246,  5786, 10566, 11392, 16172, 12268, 17048, 17874, 22654, 
   -602,  4178,  5004,  9784,  5880, 10660, 11486, 16266,  6806, 11586, 12412, 17192, 13288, 18068, 18894, 23674, 
   7782, 12562, 13388, 18168, 14264, 19044, 19870, 24650, 15190, 19970, 20796, 25576, 21672, 26452, 27278, 32058, 
//  int16
// byte 21
  -7318, -7318, -6892, -6892, -6420, -6420, -5994, -5994, -5898, -5898, -5472, -5472, -5000, -5000, -4574, -4574, 
  -5328, -5328, -4902, -4902, -4430, -4430, -4004, -4004, -3908, -3908, -3482, -3482, -3010, -3010, -2584, -2584, 
  -4706, -4706, -4280, -4280, -3808, -3808, -3382, -3382, -3286, -3286, -2860, -2860, -2388, -2388, -1962, -1962, 
  -2716, -2716, -2290, -2290, -1818, -1818, -1392, -1392, -1296, -1296,  -870,  -870,  -398,  -398,    28,    28, 
  -4034, -4034, -3608, -3608, -3136, -3136, -2710, -2710, -2614, -2614, -2188, -2188, -1716, -1716, -1290, -1290, 
  -2044, -2044, -1618, -1618, -1146, -1146,  -720,  -720,  -624,  -624,  -198,  -198,   274,   274,   700,   700, 
  -1422, -1422,  -996,  -996,  -524,  -524,   -98,   -98,    -2,    -2,   424,   424,   896,   896,  1322,  1322, 
    568,   568,   994,   994,  1466,  1466,  1892,  1892,  1988,  1988,  2414,  2414,  2886,  2886,  3312,  3312, 
  -3312, -3312, -2886, -2886, -2414, -2414, -1988, -1988, -1892, -1892, -1466, -1466,  -994,  -994,  -568,  -568, 
  -1322, -1322,  -896,  -896,  -424,  -424,     2,     2,    98,    98,   524,   524,   996,   996,  1422,  1422, 
   -700,  -700,  -274,  -274,   198,   198,   624,   624,   720,   720,  1146,  1146,  1618,  1618,  2044,  2044, 
   1290,  1290,  1716,  1716,  2188,  2188,  2614,  2614,  2710,  2710,  3136,  3136,  3608,  3608,  4034,  4034, 
    -28,   -28,   398,   398,   870,   870,  1296,  1296,  1392,  1392,  1818,  1818,  2290,  2290,  2716,  2716, 
   1962,  1962,  2388,  2388,  2860,  2860,  3286,  3286,  3382,  3382,  3808,  3808,  4280,  4280,  4706,  4706, 
   2584,  2584,  3010,  3010,  3482,  3482,  3908,  3908,  4004,  4004,  4430,  4430,  4902,  4902,  5328,  5328, 
   4574,  4574,  5000,  5000,  5472,  5472,  5898,  5898,  5994,  5994,  6420,  6420,  6892,  6892,  7318,  7318, 
//  int16
// byte 22
   5136,  3206,  3322,  1392,  3470,  1540,  1656,  -274,  3652,  1722,  1838,   -92,  1986,    56,   172, -1758, 
   3868,  1938,  2054,   124,  2202,   272,   388, -1542,  2384,   454,   570, -1360,   718, -1212, -1096, -3026, 
   4124,  2194,  2310,   380,  2458,   528,   644, -1286,  2640,   710,   826, -1104,   974,  -956,  -840, -2770, 
   2856,   926,  1042,  -888,  1190,  -740,  -624, -2554,  1372,  -558,  -442, -2372,  -294, -2224, -2108, -4038, 
   4418,  2488,  2604,   674,  2752,   822,   938,  -992,  2934,  1004,  1120,  -810,  1268,  -662,  -546, -2476, 
   3150,  1220,  1336,  -594,  1484,  -446,  -330, -2260,  1666,  -264,  -148, -2078,     0, -1930, -1814, -3744, 
   3406,  1476,  1592,  -338,  1740,  -190,   -74, -2004,  1922,    -8,   108, -1822,   256, -1674, -1558, -3488, 
   2138,   208,   324, -1606,   472, -1458, -1342, -3272,   654, -1276, -1160, -3090, -1012, -2942, -2826, -4756, 
   4756,  2826,  2942,  1012,  3090,  1160,  1276,  -654,  3272,  1342,  1458,  -472,  1606,  -324,  -208, -2138, 
   3488,  1558,  1674,  -256,  1822,  -108,     8, -1922,  2004,    74,   190, -1740,   338, -1592, -1476, -3406, 
   3744,  1814,  1930,     0,  2078,   148,   264, -1666,  2260,   330,   446, -1484,   594, -1336, -1220, -3150, 
   2476,   546,   662, -1268,   810, -1120, -1004, -2934,   992,  -938,  -822, -2752,  -674, -2604, -2488, -4418, 
   4038,  2108,  2224,   294,  2372,   442,   558, -1372,  2554,   624,   740, -1190,   888, -1042,  -926, -2856, 
   2770,   840,   956,  -974,  1104,  -826,  -710, -2640,  1286,  -644,  -528, -2458,  -380, -2310, -2194, -4124, 
   3026,  1096,  1212,  -718,  1360,  -570,  -454, -2384,  1542,  -388,  -272, -2202,  -124, -2054, -1938, -3868, 
   1758,  -172,   -56, -1986,    92, -1838, -1722, -3652,   274, -1656, -1540, -3470, -1392, -3322, -3206, -5136, 
//  int16
// byte 23
   8338,  6320,  6268,  4250,  6230,  4212,  4160,  2142,  6210,  4192,  4140,  2122,  4102,  2084,  2032,    14, 
   6204,  4186,  4134,  2116,  4096,  2078,  2026,     8,  4076,  2058,  2006,   -12,  1968,   -50,  -102, -2120, 
   6220,  4202,  4150,  2132,  4112,  2094,  2042,    24,  4092,  2074,  2022,     4,  1984,   -34,   -86, -2104, 
   4086,  2068,  2016,    -2,  1978,   -40,   -92, -2110,  1958,   -60,  -112, -2130,  -150, -2168, -2220, -4238, 
   6258,  4240,  4188,  2170,  4150,  2132,  2080,    62,  4130,  2112,  2060,    42,  2022,     4,   -48, -2066, 
   4124,  2106,  2054,    36,  2016,    -2,   -54, -2072,  1996,   -22,   -74, -2092,  -112, -2130, -2182, -4200, 
   4140,  2122,  2070,    52,  2032,    14,   -38, -2056,  2012,    -6,   -58, -2076,   -96, -2114, -2166, -4184, 
   2006,   -12,   -64, -2082,  -102, -2120, -2172, -4190,  -122, -2140, -2192, -4210, -2230, -4248, -4300, -6318, 
   6318,  4300,  4248,  2230,  4210,  2192,  2140,   122,  4190,  2172,  2120,   102,  2082,    64,    12, -2006, 
   4184,  2166,  2114,    96,  2076,    58,     6, -2012,  2056,    38,   -14, -2032,   -52, -2070, -2122, -4140, 
   4200,  2182,  2130,   112,  2092,    74,    22, -1996,  2072,    54,     2, -2016,   -36, -2054, -2106, -4124, 
   2066,    48,    -4, -2022,   -42, -2060, -2112, -4130,   -62, -2080, -2132, -4150, -2170, -4188, -4240, -6258, 
   4238,  2220,  2168,   150,  2130,   112,    60, -1958,  2110,    92,    40, -1978,     2, -2016, -2068, -4086, 
   2104,    86,    34, -1984,    -4, -2022, -2074, -4092,   -24, -2042, -2094, -4112, -2132, -4150, -4202, -6220, 
   2120,   102,    50, -1968,    12, -2006, -2058, -4076,    -8, -2026, -2078, -4096, -2116, -4134, -4186, -6204, 
    -14, -2032, -2084, -4102, -2122, -4140, -4192, -6210, -2142, -4160, -4212, -6230, -4250, -6268, -6320, -8338, 
//  int16
// byte 24
   6650,  5310,  5214,  3874,  5116,  3776,  3680,  2340,  5022,  3682,  3586,  2246,  3488,  2148,  2052,   712, 
   4932,  3592,  3496,  2156,  3398,  2058,  1962,   622,  3304,  1964,  1868,   528,  1770,   430,   334, -1006, 
   4846,  3506,  3410,  2070,  3312,  1972,  1876,   536,  3218,  1878,  1782,   442,  1684,   344,   248, -1092, 
   3128,  1788,  1692,   352,  1594,   254,   158, -1182,  1500,   160,    64, -1276,   -34, -1374, -1470, -2810, 
   4766,  3426,  3330,  1990,  3232,  1892,  1796,   456,  3138,  1798,  1702,   362,  1604,   264,   168, -1172, 
   3048,  1708,  1612,   272,  1514,   174,    78, -1262,  1420,    80,   -16, -1356,  -114, -1454, -1550, -2890, 
   2962,  1622,  1526,   186,  1428,    88,    -8, -1348,  1334,    -6,  -102, -1442,  -200, -1540, -1636, -2976, 
   1244,   -96,  -192, -1532,  -290, -1630, -1726, -3066,  -384, -1724, -1820, -3160, -1918, -3258, -3354, -4694, 
   4694,  3354,  3258,  1918,  3160,  1820,  1724,   384,  3066,  1726,  1630,   290,  1532,   192,    96, -1244, 
   2976,  1636,  1540,   200,  1442,   102,     6, -1334,  1348,     8,   -88, -1428,  -186, -1526, -1622, -2962, 
   2890,  1550,  1454,   114,  1356,    16,   -80, -1420,  1262,   -78,  -174, -1514,  -272, -1612, -1708, -3048, 
   1172,  -168,  -264, -1604,  -362, -1702, -1798, -3138,  -456, -1796, -1892, -3232, -1990, -3330, -3426, -4766, 
   2810,  1470,  1374,    34,  1276,   -64,  -160, -1500,  1182,  -158,  -254, -1594,  -352, -1692, -1788, -3128, 
   1092,  -248,  -344, -1684,  -442, -1782, -1878, -3218,  -536, -1876, -1972, -3312, -2070, -3410, -3506, -4846, 
   1006,  -334,  -430, -1770,  -528, -1868, -1964, -3304,  -622, -1962, -2058, -3398, -2156, -3496, -3592, -4932, 
   -712, -2052, -2148, -3488, -2246, -3586, -3682, -5022, -2340, -3680, -3776, -5116, -3874, -5214, -5310, -6650, 
//  int16
// byte 25
   3690,  3064,  2986,  2360,  2906,  2280,  2202,  1576,  2820,  2194,  2116,  1490,  2036,  1410,  1332,   706, 
   2732,  2106,  2028,  1402,  1948,  1322,  1244,   618,  1862,  1236,  1158,   532,  1078,   452,   374,  -252, 
   2640,  2014,  1936,  1310,  1856,  1230,  1152,   526,  1770,  1144,  1066,   440,   986,   360,   282,  -344, 
   1682,  1056,   978,   352,   898,   272,   194,  -432,   812,   186,   108,  -518,    28,  -598,  -676, -1302, 
   2544,  1918,  1840,  1214,  1760,  1134,  1056,   430,  1674,  1048,   970,   344,   890,   264,   186,  -440, 
   1586,   960,   882,   256,   802,   176,    98,  -528,   716,    90,    12,  -614,   -68,  -694,  -772, -1398, 
   1494,   868,   790,   164,   710,    84,     6,  -620,   624,    -2,   -80,  -706,  -160,  -786,  -864, -1490, 
    536,   -90,  -168,  -794,  -248,  -874,  -952, -1578,  -334,  -960, -1038, -1664, -1118, -1744, -1822, -2448, 
   2448,  1822,  1744,  1118,  1664,  1038,   960,   334,  1578,   952,   874,   248,   794,   168,    90,  -536, 
   1490,   864,   786,   160,   706,    80,     2,  -624,   620,    -6,   -84,  -710,  -164,  -790,  -868, -1494, 
   1398,   772,   694,    68,   614,   -12,   -90,  -716,   528,   -98,  -176,  -802,  -256,  -882,  -960, -1586, 
    440,  -186,  -264,  -890,  -344,  -970, -1048, -1674,  -430, -1056, -1134, -1760, -1214, -1840, -1918, -2544, 
   1302,   676,   598,   -28,   518,  -108,  -186,  -812,   432,  -194,  -272,  -898,  -352,  -978, -1056, -1682, 
    344,  -282,  -360,  -986,  -440, -1066, -1144, -1770,  -526, -1152, -1230, -1856, -1310, -1936, -2014, -2640, 
    252,  -374,  -452, -1078,  -532, -1158, -1236, -1862,  -618, -1244, -1322, -1948, -1402, -2028, -2106, -2732, 
   -706, -1332, -1410, -2036, -1490, -2116, -2194, -2820, -1576, -2202, -2280, -2906, -2360, -2986, -3064, -3690, 
//  int16
// byte 26
   1404,  1222,  1184,  1002,  1140,   958,   920,   738,  1092,   910,   872,   690,   828,   646,   608,   426, 
   1038,   856,   818,   636,   774,   592,   554,   372,   726,   544,   506,   324,   462,   280,   242,    60, 
    980,   798,   760,   578,   716,   534,   496,   314,   668,   486,   448,   266,   404,   222,   184,     2, 
    614,   432,   394,   212,   350,   168,   130,   -52,   302,   120,    82,  -100,    38,  -144,  -182,  -364, 
    918,   736,   698,   516,   654,   472,   434,   252,   606,   424,   386,   204,   342,   160,   122,   -60, 
    552,   370,   332,   150,   288,   106,    68,  -114,   240,    58,    20,  -162,   -24,  -206,  -244,  -426, 
    494,   312,   274,    92,   230,    48,    10,  -172,   182,     0,   -38,  -220,   -82,  -264,  -302,  -484, 
    128,   -54,   -92,  -274,  -136,  -318,  -356,  -538,  -184,  -366,  -404,  -586,  -448,  -630,  -668,  -850, 
    850,   668,   630,   448,   586,   404,   366,   184,   538,   356,   318,   136,   274,    92,    54,  -128, 
    484,   302,   264,    82,   220,    38,     0,  -182,   172,   -10,   -48,  -230,   -92,  -274,  -312,  -494, 
    426,   244,   206,    24,   162,   -20,   -58,  -240,   114,   -68,  -106,  -288,  -150,  -332,  -370,  -552, 
     60,  -122,  -160,  -342,  -204,  -386,  -424,  -606,  -252,  -434,  -472,  -654,  -516,  -698,  -736,  -918, 
    364,   182,   144,   -38,   100,   -82,  -120,  -302,    52,  -130,  -168,  -350,  -212,  -394,  -432,  -614, 
     -2,  -184,  -222,  -404,  -266,  -448,  -486,  -668,  -314,  -496,  -534,  -716,  -578,  -760,  -798,  -980, 
    -60,  -242,  -280,  -462,  -324,  -506,  -544,  -726,  -372,  -554,  -592,  -774,  -636,  -818,  -856, -1038, 
   -426,  -608,  -646,  -828,  -690,  -872,  -910, -1092,  -738,  -920,  -958, -1140, -1002, -1184, -1222, -1404, 
//  int16
// byte 27
    247,   247,   235,   235,   221,   221,   209,   209,   203,   203,   191,   191,   177,   177,   165,   165, 
    183,   183,   171,   171,   157,   157,   145,   145,   139,   139,   127,   127,   113,   113,   101,   101, 
    159,   159,   147,   147,   133,   133,   121,   121,   115,   115,   103,   103,    89,    89,    77,    77, 
     95,    95,    83,    83,    69,    69,    57,    57,    51,    51,    39,    39,    25,    25,    13,    13, 
    133,   133,   121,   121,   107,   107,    95,    95,    89,    89,    77,    77,    63,    63,    51,    51, 
     69,    69,    57,    57,    43,    43,    31,    31,    25,    25,    13,    13,    -1,    -1,   -13,   -13, 
     45,    45,    33,    33,    19,    19,     7,     7,     1,     1,   -11,   -11,   -25,   -25,   -37,   -37, 
    -19,   -19,   -31,   -31,   -45,   -45,   -57,   -57,   -63,   -63,   -75,   -75,   -89,   -89,  -101,  -101, 
    101,   101,    89,    89,    75,    75,    63,    63,    57,    57,    45,    45,    31,    31,    19,    19, 
     37,    37,    25,    25,    11,    11,    -1,    -1,    -7,    -7,   -19,   -19,   -33,   -33,   -45,   -45, 
     13,    13,     1,     1,   -13,   -13,   -25,   -25,   -31,   -31,   -43,   -43,   -57,   -57,   -69,   -69, 
    -51,   -51,   -63,   -63,   -77,   -77,   -89,   -89,   -95,   -95,  -107,  -107,  -121,  -121,  -133,  -133, 
    -13,   -13,   -25,   -25,   -39,   -39,   -51,   -51,   -57,   -57,   -69,   -69,   -83,   -83,   -95,   -95, 
    -77,   -77,   -89,   -89,  -103,  -103,  -115,  -115,  -121,  -121,  -133,  -133,  -147,  -147,  -159,  -159, 
   -101,  -101,  -113,  -113,  -127,  -127,  -139,  -139,  -145,  -145,  -157,  -157,  -171,  -171,  -183,  -183, 
   -165,  -165,  -177,  -177,  -191,  -191,  -203,  -203,  -209,  -209,  -221,  -221,  -235,  -235,  -247,  -247, 
//  int16
// byte 28
   -105,   -71,   -71,   -37,   -73,   -39,   -39,    -5,   -75,   -41,   -41,    -7,   -43,    -9,    -9,    25, 
    -77,   -43,   -43,    -9,   -45,   -11,   -11,    23,   -47,   -13,   -13,    21,   -15,    19,    19,    53, 
    -81,   -47,   -47,   -13,   -49,   -15,   -15,    19,   -51,   -17,   -17,    17,   -19,    15,    15,    49, 
    -53,   -19,   -19,    15,   -21,    13,    13,    47,   -23,    11,    11,    45,     9,    43,    43,    77, 
    -87,   -53,   -53,   -19,   -55,   -21,   -21,    13,   -57,   -23,   -23,    11,   -25,     9,     9,    43, 
    -59,   -25,   -25,     9,   -27,     7,     7,    41,   -29,     5,     5,    39,     3,    37,    37,    71, 
    -63,   -29,   -29,     5,   -31,     3,     3,    37,   -33,     1,     1,    35,    -1,    33,    33,    67, 
    -35,    -1,    -1,    33,    -3,    31,    31,    65,    -5,    29,    29,    63,    27,    61,    61,    95, 
    -95,   -61,   -61,   -27,   -63,   -29,   -29,     5,   -65,   -31,   -31,     3,   -33,     1,     1,    35, 
    -67,   -33,   -33,     1,   -35,    -1,    -1,    33,   -37,    -3,    -3,    31,    -5,    29,    29,    63, 
    -71,   -37,   -37,    -3,   -39,    -5,    -5,    29,   -41,    -7,    -7,    27,    -9,    25,    25,    59, 
    -43,    -9,    -9,    25,   -11,    23,    23,    57,   -13,    21,    21,    55,    19,    53,    53,    87, 
    -77,   -43,   -43,    -9,   -45,   -11,   -11,    23,   -47,   -13,   -13,    21,   -15,    19,    19,    53, 
    -49,   -15,   -15,    19,   -17,    17,    17,    51,   -19,    15,    15,    49,    13,    47,    47,    81, 
    -53,   -19,   -19,    15,   -21,    13,    13,    47,   -23,    11,    11,    45,     9,    43,    43,    77, 
    -25,     9,     9,    43,     7,    41,    41,    75,     5,    39,    39,    73,    37,    71,    71,   105, 
//  int16
// byte 29
   -107,   -87,   -85,   -65,   -83,   -63,   -61,   -41,   -81,   -61,   -59,   -39,   -57,   -37,   -35,   -15, 
    -79,   -59,   -57,   -37,   -55,   -35,   -33,   -13,   -53,   -33,   -31,   -11,   -29,    -9,    -7,    13, 
    -77,   -57,   -55,   -35,   -53,   -33,   -31,   -11,   -51,   -31,   -29,    -9,   -27,    -7,    -5,    15, 
    -49,   -29,   -27,    -7,   -25,    -5,    -3,    17,   -23,    -3,    -1,    19,     1,    21,    23,    43, 
    -75,   -55,   -53,   -33,   -51,   -31,   -29,    -9,   -49,   -29,   -27,    -7,   -25,    -5,    -3,    17, 
    -47,   -27,   -25,    -5,   -23,    -3,    -1,    19,   -21,    -1,     1,    21,     3,    23,    25,    45, 
    -45,   -25,   -23,    -3,   -21,    -1,     1,    21,   -19,     1,     3,    23,     5,    25,    27,    47, 
    -17,     3,     5,    25,     7,    27,    29,    49,     9,    29,    31,    51,    33,    53,    55,    75, 
    -75,   -55,   -53,   -33,   -51,   -31,   -29,    -9,   -49,   -29,   -27,    -7,   -25,    -5,    -3,    17, 
    -47,   -27,   -25,    -5,   -23,    -3,    -1,    19,   -21,    -1,     1,    21,     3,    23,    25,    45, 
    -45,   -25,   -23,    -3,   -21,    -1,     1,    21,   -19,     1,     3,    23,     5,    25,    27,    47, 
    -17,     3,     5,    25,     7,    27,    29,    49,     9,    29,    31,    51,    33,    53,    55,    75, 
    -43,   -23,   -21,    -1,   -19,     1,     3,    23,   -17,     3,     5,    25,     7,    27,    29,    49, 
    -15,     5,     7,    27,     9,    29,    31,    51,    11,    31,    33,    53,    35,    55,    57,    77, 
    -13,     7,     9,    29,    11,    31,    33,    53,    13,    33,    35,    55,    37,    57,    59,    79, 
     15,    35,    37,    57,    39,    59,    61,    81,    41,    61,    63,    83,    65,    85,    87,   107, 
//  int16
// byte 30
    -42,   -36,   -36,   -30,   -34,   -28,   -28,   -22,   -32,   -26,   -26,   -20,   -24,   -18,   -18,   -12, 
    -30,   -24,   -24,   -18,   -22,   -16,   -16,   -10,   -20,   -14,   -14,    -8,   -12,    -6,    -6,     0, 
    -30,   -24,   -24,   -18,   -22,   -16,   -16,   -10,   -20,   -14,   -14,    -8,   -12,    -6,    -6,     0, 
    -18,   -12,   -12,    -6,   -10,    -4,    -4,     2,    -8,    -2,    -2,     4,     0,     6,     6,    12, 
    -28,   -22,   -22,   -16,   -20,   -14,   -14,    -8,   -18,   -12,   -12,    -6,   -10,    -4,    -4,     2, 
    -16,   -10,   -10,    -4,    -8,    -2,    -2,     4,    -6,     0,     0,     6,     2,     8,     8,    14, 
    -16,   -10,   -10,    -4,    -8,    -2,    -2,     4,    -6,     0,     0,     6,     2,     8,     8,    14, 
     -4,     2,     2,     8,     4,    10,    10,    16,     6,    12,    12,    18,    14,    20,    20,    26, 
    -26,   -20,   -20,   -14,   -18,   -12,   -12,    -6,   -16,   -10,   -10,    -4,    -8,    -2,    -2,     4, 
    -14,    -8,    -8,    -2,    -6,     0,     0,     6,    -4,     2,     2,     8,     4,    10,    10,    16, 
    -14,    -8,    -8,    -2,    -6,     0,     0,     6,    -4,     2,     2,     8,     4,    10,    10,    16, 
     -2,     4,     4,    10,     6,    12,    12,    18,     8,    14,    14,    20,    16,    22,    22,    28, 
    -12,    -6,    -6,     0,    -4,     2,     2,     8,    -2,     4,     4,    10,     6,    12,    12,    18, 
      0,     6,     6,    12,     8,    14,    14,    20,    10,    16,    16,    22,    18,    24,    24,    30, 
      0,     6,     6,    12,     8,    14,    14,    20,    10,    16,    16,    22,    18,    24,    24,    30, 
     12,    18,    18,    24,    20,    26,    26,    32,    22,    28,    28,    34,    30,    36,    36,    42, 
//  int16
// byte 31
     -9,    -9,    -7,    -7,    -7,    -7,    -5,    -5,    -7,    -7,    -5,    -5,    -5,    -5,    -3,    -3, 
     -7,    -7,    -5,    -5,    -5,    -5,    -3,    -3,    -5,    -5,    -3,    -3,    -3,    -3,    -1,    -1, 
     -7,    -7,    -5,    -5,    -5,    -5,    -3,    -3,    -5,    -5,    -3,    -3,    -3,    -3,    -1,    -1, 
     -5,    -5,    -3,    -3,    -3,    -3,    -1,    -1,    -3,    -3,    -1,    -1,    -1,    -1,     1,     1, 
     -5,    -5,    -3,    -3,    -3,    -3,    -1,    -1,    -3,    -3,    -1,    -1,    -1,    -1,     1,     1, 
     -3,    -3,    -1,    -1,    -1,    -1,     1,     1,    -1,    -1,     1,     1,     1,     1,     3,     3, 
     -3,    -3,    -1,    -1,    -1,    -1,     1,     1,    -1,    -1,     1,     1,     1,     1,     3,     3, 
     -1,    -1,     1,     1,     1,     1,     3,     3,     1,     1,     3,     3,     3,     3,     5,     5, 
     -5,    -5,    -3,    -3,    -3,    -3,    -1,    -1,    -3,    -3,    -1,    -1,    -1,    -1,     1,     1, 
     -3,    -3,    -1,    -1,    -1,    -1,     1,     1,    -1,    -1,     1,     1,     1,     1,     3,     3, 
     -3,    -3,    -1,    -1,    -1,    -1,     1,     1,    -1,    -1,     1,     1,     1,     1,     3,     3, 
     -1,    -1,     1,     1,     1,     1,     3,     3,     1,     1,     3,     3,     3,     3,     5,     5, 
     -1,    -1,     1,     1,     1,     1,     3,     3,     1,     1,     3,     3,     3,     3,     5,     5, 
      1,     1,     3,     3,     3,     3,     5,     5,     3,     3,     5,     5,     5,     5,     7,     7, 
      1,     1,     3,     3,     3,     3,     5,     5,     3,     3,     5,     5,     5,     5,     7,     7, 
      3,     3,     5,     5,     5,     5,     7,     7,     5,     5,     7,     7,     7,     7,     9,     9, 
//  int16
};
